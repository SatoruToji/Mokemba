export const thiss: Record<string, string>[] = [
    {
        '/MokembaMascot/js/this/1.png': 'this - это ключевое слово которое точечно ссылается на объект и возвращает его методы, свойства (контекст тоже играет роль!)',
    },
    {
        '/MokembaMascot/js/this/1.png': 'если ты не учтешь контекст, то ты промахнешься и будешь ссылаться на глобальный объект (window например)',
    },
    {
        '/MokembaMascot/js/this/2.png': 'итак, вот тебе пример: ',
    },
    {
        '/MokembaMascot/js/this/3.png': 'А теперь перепиши в консоль браузера const name и объект const person.',
    },
    {
        '/MokembaMascot/js/this/4.png': 'Ну а теперь вызови функцию greet помощью person.greet(), но перед вызовом хорошенько подумай какое имя тебе выдаст консоль...',
    },
    {
        '/MokembaMascot/js/this/5.png': 'Теперь разжевываю: вывелось имя john потому что функция с console.log ссылается на name внутри ОБЪЕКТА PERSON, а не на глобальную видимость, где поджидает Pasha',
    },
    {
        '/MokembaMascot/js/this/6.png': 'Я надеюсь что до тебя доперло, this позволяет тебе точеньно взаимодействовать с данными внутри объектов, классов, функций',
    },
    {
        '/MokembaMascot/js/this/1.png': 'Есть нюансик по поводу стрелочных функций. Стрелочные функции не имеют своего this и тупо унаследуют его от глобального контекста (сам загугли что это, это может быть window или global)',
    }
]