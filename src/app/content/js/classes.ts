export const classes: Record<string, string>[] = [
    {
        '/MokembaMascot/js/1.png': 'Представь, что у тебя есть чертёж игрушки, по которому ты обязан делать все игрушки. Он задаёт свойства, характеристики, механизмы...'
    },
    {
        '/MokembaMascot/js/class/1.png': 'В JS есть такая же штука — это CLASS. Ты создаёшь чертёж (класс) и по нему создаёшь игрушки (объекты).'
    },
    {
        '/MokembaMascot/js/class/1.png': 'constructor — это метод, который вызывается при создании объекта. Он нужен, чтобы задать свойства экземпляра класса.'
    },
    {
        '/MokembaMascot/js/class/2.png': 'extends — позволяет расширить функционал класса. Свойства и методы родителя (базового класса) становятся доступны в дочернем классе.'
    },
    {
        '/MokembaMascot/js/class/2.png': 'super() — используется внутри дочернего класса, чтобы вызвать constructor родителя. Разберёшься сам, гугли, это легко.'
    },
    {
        '/MokembaMascot/js/class/4.png': 'Полиморфизм — это когда в дочернем классе можно переопределить методы родительского класса.'
    },
    {
        '/MokembaMascot/js/class/5.png': 'Геттеры (get) позволяют получать свойства объекта, а сеттеры (set) — изменять их с дополнительной логикой. Они полезны, если нужно валидировать данные перед сохранением.'
    }
]